server {
  listen 443 ssl;

  # This should be the VPC network range +2
  resolver NGINX_RESOLVER;

  # Use variable to force dynamic DNS resolution as per
  # https://tenzer.dk/nginx-with-dynamic-upstreams/.
  # Without this nginx caches DNS lookups on startup and never updates
  # them.
  set $connector_upstream CONNECTOR_URL;

  server_tokens off;

  server_name notifications;
  client_body_buffer_size 5m;
  client_max_body_size 5m;

  ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1.2;
  ssl_session_timeout 10m;
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;
  ssl_certificate /etc/keys/crt;
  ssl_certificate_key /etc/keys/key;

  location ~ ^/$ {
    return 301 https://payments.service.gov.uk/;
  }

  error_page 404 https://gov.uk/404;

  location /index.html {
    return 404;
  }

  # Health check url
  location /healthcheck {
    set $http_x_request_id $request_id;
    return 200 'OK';
    add_header Content-Type text/plain;
  }

  # Request denied
  location /request-denied {
    set $http_x_request_id $request_id;
    return 400 'DENIED';
    add_header Content-Type text/plain;
  }

  location /v1/api/notifications {
    set $http_x_request_id $request_id;

    include /etc/nginx/naxsi.rules;

    # Ensure that path part of url is propagated to upstream when
    # using proxy_pass with variable
    rewrite ^/(.*)$ /$1 break;
    proxy_pass $connector_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Request-Id $http_x_request_id;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

    proxy_connect_timeout 15s;
    proxy_buffering off;
  }
}
